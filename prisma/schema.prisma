// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Dossier {
  id                 Int         @id @default(autoincrement())
  type               TypeDossier @default(CCharges)
  sujet              String      @db.LongText
  numeroDossier      String?
  dateLettre         DateTime
  dateLimite         DateTime
  dateLimiteOffres   DateTime? // Date maintien des offres (spécifique aux dépouillements)
  matPresident       String
  nomPrenomPresident String
  numDami            String?
  importance         Importance  @default(Normal)
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt

  Chronologies Chronologie[]
}

enum Importance {
  Normal
  Important
  TresImportant
  Vital
}

enum TypeDossier {
  CCharges
  Depouillement
}

model Chronologie {
  id          Int       @id @default(autoincrement())
  dossier     Dossier   @relation(fields: [idDossier], references: [id])
  idDossier   Int
  instance    Instance  @relation(fields: [idInstance], references: [id])
  idInstance  Int
  dateEnvoi   DateTime?
  filePath    String?
  traite      Boolean   @default(false)
  commentaire String?
  dateLimite  DateTime
}

model Instance {
  id           Int           @id @default(autoincrement())
  libelle      String
  rang         Int
  delai        Int
  matPresident String?
  type         typeInstance @default(Standard)
  Chronologies Chronologie[]
  membres      Membre[]
}

enum typeInstance {
  Standard 
  Commission
}

model Cadre {
  id         Int    @id @default(autoincrement())
  MAT_PERS   String @db.VarChar(6)
  NOM_PERS   String @db.VarChar(45)
  NOM_PERS_A String @db.VarChar(45)
  COD_CLASS  String @db.VarChar(2)

  membres Membre[]

  @@index([MAT_PERS])
}

model Membre {
  id         Int      @id @default(autoincrement())
  cadre      Cadre    @relation(fields: [idCadre], references: [id])
  idCadre    Int
  instance   Instance @relation(fields: [idInstance], references: [id])
  idInstance Int

  @@unique([idCadre, idInstance])
}
